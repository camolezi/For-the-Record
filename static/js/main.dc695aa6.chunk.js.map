{"version":3,"sources":["components/Motion/MotionCenter.tsx","components/Header/AppHeader.tsx","utils/DateTime/WeekDays.ts","modules/Db/AudioEntriesDb.ts","modules/Db/LocalDatabase.ts","utils/FunctionalUtils.ts","modules/Db/UserDb.ts","modules/Db/Databases.ts","modules/Playback/AudioController/AudioController.ts","modules/Playback/actions/PlaybackActions.ts","modules/Calendar/actions/CalendarActions.ts","modules/Calendar/store/CalendarSlice.ts","utils/testing/CypressUtils.ts","utils/Buffer/BufferUtils.ts","modules/Crypto/Authenticate.ts","modules/Crypto/HashStorage.ts","modules/Authentication/Login.ts","modules/Authentication/AuthSession.ts","utils/ReduxUtils/AsyncActionHelpers.ts","app/LoadInitialState/LoadInitialStateActions.ts","modules/Authentication/state/UserSlice.ts","modules/Recording/state/RecordTypes.ts","modules/Playback/state/PlaybackSlice.ts","modules/Db/actions/AudioDbActions.ts","modules/Recording/Microphone/MicController.ts","modules/Recording/Microphone/Microphone.ts","modules/Recording/RecordActions.ts","modules/Recording/state/RecordSlice.ts","app/Store.ts","modules/Authentication/state/UserSelectors.ts","modules/Authentication/OnlyLoggedIn.tsx","modules/Playback/state/PlaybackSelectors.ts","modules/Playback/components/AudioSlider.tsx","modules/Playback/components/AudioPlayer.tsx","modules/Playback/PlaybackPanel.tsx","components/Motion/MotionBox.tsx","modules/Calendar/Tile/Tile.tsx","modules/Calendar/MonthCalendar/CalendarMonth.tsx","modules/Calendar/MonthCalendar/MonthButton.tsx","modules/Calendar/Calendar.tsx","modules/Calendar/DayRecordingsDisplay/RecordingItemDisplay.tsx","modules/Calendar/DayRecordingsDisplay/DayRecordingsDisplay.tsx","modules/Calendar/store/CalendarSelectors.ts","modules/Calendar/CalendarWIdget.tsx","views/CalendarView.tsx","modules/Forms/useForm.tsx","components/Form/BasicForm.tsx","modules/Authentication/actions/UserActions.ts","modules/Authentication/UserCreation/UserCreationForm.tsx","utils/ReduxUtils/RenderAsyncActions.tsx","components/Loading/LoadingSpinner.tsx","views/CreateUserView.tsx","modules/Authentication/UserLogin/UserLoginForms.tsx","views/LoginView.tsx","components/Header/ColorModeButton.tsx","views/OptionsView.tsx","modules/Recording/state/RecordSelectors.ts","modules/Recording/RecordingCounter.tsx","modules/Recording/RecordPanel.tsx","views/RecordView.tsx","app/LoadInitialState/OnPageLoadActions.ts","app/LoadInitialState/LoadInitialStateHook.ts","components/Loading/PageSkeleton.tsx","app/LoadInitialState/WithInitialPageSkeleton.tsx","app/App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","theme/config.ts","theme/theme.ts","index.tsx","app/Providers.tsx"],"names":["MotionCenterChakra","motion","Center","MotionCenter","children","props","AppHeader","navigate","useNavigate","location","useLocation","useDesktopHeading","useBreakpointValue","MenuItem","path","text","icon","as","onTapStart","backgroundColor","textAlign","flex","role","spacing","position","size","boxSize","aria-label","isSelected","pathname","layout","layoutId","initial","transition","type","zIndex","AnimateSharedLayout","align","justify","overflow","BsCalendar","BsMic","BsGear","formatSecondsToCounter","totalSeconds","minutes","Math","floor","seconds","withLeadingZero","value","AudioEntriesDb","database","this","a","audioEntries","clear","then","audioData","header","add","date","description","length","audio","where","equalsIgnoreCase","toArray","get","data","undefined","toCollection","primaryKeys","monthDate","between","startOfMonth","endOfMonth","getEndMonthDay","day","startOfDay","endOfDay","getEndOfDay","LocalDatabase","user","version","stores","table","Dexie","getFirst","array","MaybeAsync","liftMaybe","Maybe","fromFalsy","UserDb","delete","chain","clearUser","getUser","localdb","open","catch","e","console","log","audiodb","userdb","document","createElement","preload","body","append","addEventListener","duration","Infinity","currentTime","Number","MAX_SAFE_INTEGER","ontimeupdate","src","stopPlaying","load","play","pause","isNaN","isFinite","func","getAudioDuration","updatePeriod","shouldUpdate","callUpdatePeriod","setTimeout","loadAudioDuration","createAsyncThunk","changedAudioTime","createAction","createdAudioUrl","audioURL","window","URL","createObjectURL","setAudioSource","startPlayingRecord","startPlaying","pausePlayingRecord","pausePlaying","stopPlayingRecord","pausePlayButtonClicked","_","dispatch","getState","playback","isPlaying","audioUrl","loadMonthRecordigns","getMonthEntriesHeader","selectedDay","loadAudioPlayback","getEntry","InitialCalendarState","recordings","CalendarSlice","createReducer","builder","addCase","fulfilled","state","action","payload","AddToCypressWindow","name","obj","windowNotTyped","Cypress","ArrayBufferToStr","TextDecoder","decode","StrToUint8Array","dataArray","split","map","Uint8Array","from","CryptoKeyToBuffer","key","crypto","subtle","exportKey","CryptoKeyToStr","GenerateKeyFromSecret","secretParam","secret","generateKeyFromSecret","curry","generateKeyFromMaterial","encoder","TextEncoder","importKey","encode","salt","material","deriveKey","iterations","hash","GenerateSalt","bytes","getRandomValues","HashKeyToStorage","keydata","keyData","argon2","pass","ArgonType","Argon2id","argon2Hash","argon2Verify","password","encodedKey","verify","encoded","AuthenticateUser","loginKey","keyParam","keyStr","VerifyHash","CreateNewUser","GenerateSaltForSecret","hashKey","createUser","result","buildLoginKey","join","authSession","storage","users","authInfo","getItem","sessionInfo","setItem","getAuthSession","ifJust","setAuthSession","run","isJust","maybe","extractNullable","sessionStorage","AsyncActionStatus","isPendingAction","endsWith","isRejectedAction","isFulfilledAction","addDefaultAsyncMatcher","fieldInSlice","actionName","addMatcher","includes","Pending","addPendingMatcher","Completed","Rejected","addFulfilledMatcher","addRejectedMatcher","loadInitialUserState","userJust","extract","isLoggedIn","isAuthenticated","NotStarted","isUserCreated","isLoadingInitialState","MicAvailability","InitialUserState","UserSlice","initialState","InitialPlaybackState","audioDuration","currentAudioTime","PlaybackSlice","saveRecordInDb","entry","Date","addEntry","MicrophoneController","mediaRecorder","dataChunks","Array","ondataavailable","event","push","onerror","start","stopPromise","Promise","resolve","onstop","getRecordedData","stop","Blob","mimeType","microphone","microphoneController","navigator","mediaDevices","getUserMedia","microphoneStream","media","MediaRecorder","audioBitsPerSecond","askForMicrophonePermission","askForUserPermission","startRecording","stopRecording","recordButtonClicked","record","isMicrophoneAvailable","isRecording","nextState","calculateNextRecordAction","NotAvailable","Available","InitialRecordState","RecordSlice","createSlice","reducers","extraReducers","rejected","pending","rootReducer","combineReducers","calendar","AppInitialState","store","partialState","appInitialState","configureStore","reducer","preloadedState","CreateStore","useTypedDispatch","useDispatch","useTypedSelector","useSelector","selectIsUserCreated","selectIsLoadingInitialState","selectIsUserLoggedIn","OnlyLoggedIn","redirect","isUsedloggedIn","to","replace","selectIsPlaying","selectAudioDuration","selectCurrentAudioTime","selectCurrentAudioCompletedPercentage","createSelector","AudioSlider","audioPercentage","currentPosition","fontSize","toFixed","defaultValue","focusThumbOnChange","onChange","sliderValue","seekPosition","seekTo","seekAudioTo","AudioPlayer","p","templateColumns","justifyItems","alignItems","justifyContent","alignContent","colStart","isRound","colorScheme","mx","MdForward10","disabled","MdPause","MdPlayArrow","onClick","MdReplay10","marginLeft","MdStop","width","colSpan","px","PlaybackPanel","MotionBoxChakra","Box","MotionBox","Tile","numberOfRecords","element","dayNumber","recordsNumber","ratio","bgColor","whileTap","scale","whileHover","height","borderRadius","CalendarMonth","numberOfDays","startAtDay","recordsDays","tiles","keys","weekDayOffset","findIndex","tilesOffset","fill","weekDaysTitles","x","animate","bounce","columns","spacingX","spacingY","MotionButton","Button","MonthButton","Calendar","onNextMonth","onPreviousMonth","recordingDays","daysInMonth","getDaysInMonth","getNumberDaysInMonth","firstDayInMonth","getDay","getFirstWeekDayInMonth","monthTitle","format","formatToMonthYear","marginBottom","scaleY","RecordingItemDisplay","audioEntry","borderWidth","ease","mt","fontWeight","lineHeight","isTruncated","toLocaleTimeString","color","letterSpacing","textTransform","ml","DayRecordingsDisplay","dayRecordingHeaders","divider","borderColor","toLocaleDateString","recording","toString","selectRecording","selectMonthRecordingObject","getDate","reduce","recordingObj","selectDayRecordingHeaders","filter","dayOfMonth","CelendarWidget","useState","currentDate","setCurrentDate","monthRecordingObject","useEffect","direction","m","addMonths","CelendarView","centerContent","useForm","validation","mapValues","error","formState","changeState","validateFormFields","useCallback","currentformState","newFormState","Object","entries","id","validationFunc","newValidationState","inputElement","target","BasicForm","definition","submitText","onSubmit","validationObj","input","inputs","isInvalid","label","helperText","submitButtonDisabled","values","current","field","my","createNewUser","loginUser","authenticate","UserCreationForm","otherValues","RenderAsyncActions","actionStatus","toRender","statusMap","LoadingSpinner","CreateUserView","failedErrorMessage","in","offsetY","py","pb","maxW","UserLoginForms","LoginView","userLoginForm","ColorModeButton","toggleColorMode","useColorMode","MdBrightness4","OptionsView","selectIsRecording","selectIsMicAvailable","micAvailability","RecordingCounter","counter","setCounter","RecordPanel","isMicAvailable","redRecording","recordingIcon","svg","xmlns","className","viewBox","d","stroke","strokeMiterlimit","strokeWidth","strokeLinecap","circle","opacity","pathLength","r","cx","cy","micNotAvailableIcon","strokeLinejoin","micAvailableIcon","icons","RecordView","OnPageLoadActions","onAudioDurantionChange","onCurrentTimeUpdate","onAudioPlaybackEnd","LoadInitialState","forEach","PageSkeleton","WithInitialPageSkeleton","appIsLoading","App","navBarHeight","contentHeight","String","WithPlaybackLayout","recordView","otionsView","calendarView","CalendarView","loginView","createUserView","innerHeight","innerWidth","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","themeConfig","initialColorMode","useSystemColorMode","AppTheme","extendTheme","config","styles","global","ReactDOM","render","StrictMode","mainStore","theme","WrapWithProviders","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.dc695aa6.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Center, CenterProps } from '@chakra-ui/react';\nimport { HTMLMotionProps, motion } from 'framer-motion';\n\nconst MotionCenterChakra = motion(Center);\n\nexport default function MotionCenter({\n  children,\n  ...props\n}: CenterProps & HTMLMotionProps<'div'>): JSX.Element {\n  return <MotionCenterChakra {...props}>{children}</MotionCenterChakra>;\n}\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport {\n  Flex,\n  Heading,\n  HStack,\n  Icon,\n  useBreakpointValue,\n} from '@chakra-ui/react';\nimport { AnimateSharedLayout } from 'framer-motion';\nimport { BsCalendar, BsMic, BsGear } from 'react-icons/bs';\nimport { IconType } from 'react-icons';\nimport MotionCenter from '../Motion/MotionCenter';\n\nfunction AppHeader(): JSX.Element {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const useDesktopHeading = useBreakpointValue([false, false, true]);\n\n  const notSelectedBackgroundColor = 'whiteAlpha.100';\n  const selectedBackgroudColor = 'blue.700';\n\n  const calendarPath = '/calendar';\n  const recordingPath = '/';\n  const optionsPath = '/options';\n\n  const wrapDecorationIfSelected = (isSelected: boolean): JSX.Element => {\n    if (isSelected)\n      return (\n        <MotionCenter\n          boxSize=\"100%\"\n          layout\n          layoutId=\"outline\"\n          initial={false}\n          transition={{ type: 'spring' }}\n          backgroundColor={selectedBackgroudColor}\n          zIndex={-1}\n        />\n      );\n\n    return <></>;\n  };\n\n  const MenuItem = (path: string, text: string, icon: IconType) => (\n    <MotionCenter\n      as=\"button\"\n      onTapStart={() => {\n        navigate(path);\n      }}\n      backgroundColor={notSelectedBackgroundColor}\n      textAlign=\"center\"\n      flex=\"1\"\n      role=\"link\"\n    >\n      <HStack spacing={3} position=\"absolute\">\n        {useDesktopHeading && (\n          <Heading as=\"h4\" size=\"md\">\n            {text}\n          </Heading>\n        )}\n        <Icon boxSize={6} as={icon} aria-label={text} />\n      </HStack>\n\n      {wrapDecorationIfSelected(path === location.pathname)}\n    </MotionCenter>\n  );\n\n  return (\n    <AnimateSharedLayout>\n      <Flex\n        boxSize=\"100%\"\n        align=\"stretch\"\n        justify=\"space-around\"\n        overflow=\"hidden\"\n      >\n        {MenuItem(calendarPath, 'Calendar', BsCalendar)}\n        {MenuItem(recordingPath, 'Recording', BsMic)}\n        {MenuItem(optionsPath, 'Options', BsGear)}\n      </Flex>\n    </AnimateSharedLayout>\n  );\n}\n\nexport default AppHeader;\n","import {\n  format,\n  getDaysInMonth,\n  startOfMonth,\n  addMonths,\n  endOfMonth,\n  startOfDay,\n  endOfDay,\n} from 'date-fns';\n\nexport type WeekDay = 'Sun' | 'Mon' | 'Tue' | 'Wed' | 'Thu' | 'Fri' | 'Sat';\n\nexport function getWeekDays(): ReadonlyArray<WeekDay> {\n  return ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'] as const;\n}\n\nexport function getNumberDaysInMonth(date: Date): number {\n  return getDaysInMonth(date);\n}\n\nexport function getWeekDayIndex(day: WeekDay): number {\n  return getWeekDays().findIndex((value) => day === value);\n}\n\nexport function getFirstWeekDayInMonth(date: Date): WeekDay {\n  const startMonth = startOfMonth(date);\n  return getWeekDays()[startMonth.getDay()];\n}\n\nexport function formatToMonthYear(date: Date): string {\n  return format(date, 'MMMM yyyy');\n}\n\nexport function getNextMonth(date: Date): Date {\n  return addMonths(date, 1);\n}\n\nexport function getPreviousMonth(date: Date): Date {\n  return addMonths(date, -1);\n}\n\nexport function getFirstMonthDay(date: Date): Date {\n  return startOfMonth(date);\n}\n\nexport function getEndMonthDay(date: Date): Date {\n  return endOfMonth(date);\n}\n\nexport function getStartOfDay(date: Date): Date {\n  return startOfDay(date);\n}\n\nexport function getEndOfDay(date: Date): Date {\n  return endOfDay(date);\n}\n\nexport function isDateOnDay(date: Date, dayOfMonth: number): boolean {\n  const day = date.getDate();\n  return day === dayOfMonth;\n}\n\nexport function formatSecondsToCounter(totalSeconds: number): string {\n  const minutes = Math.floor(totalSeconds / 60);\n  const seconds = totalSeconds % 60;\n\n  const withLeadingZero = (value: number) => (value < 10 ? `0${value}` : value);\n\n  return `${withLeadingZero(minutes)}:${withLeadingZero(seconds)}`;\n}\n","import {\n  getEndMonthDay,\n  getEndOfDay,\n  getFirstMonthDay,\n  getStartOfDay,\n} from '../../utils/DateTime/WeekDays';\nimport LocalDatabase from './LocalDatabase';\nimport { AudioEntry, AudioEntryHeader } from './types';\n\nexport default class AudioEntriesDb {\n  private readonly database: LocalDatabase;\n\n  constructor(database: LocalDatabase) {\n    this.database = database;\n  }\n\n  async clearAllEntries(): Promise<void> {\n    return this.database.audioEntries\n      .clear()\n      .then(() => this.database.audioData.clear());\n  }\n\n  addEntry(header: AudioEntry): Promise<Date> {\n    return this.database.audioEntries\n      .add({\n        date: header.date,\n        description: header.description,\n        length: header.length,\n      })\n      .then(() =>\n        this.database.audioData.add({ date: header.date, audio: header.audio })\n      );\n  }\n\n  getEntryHeaderByDescription(\n    description: string\n  ): Promise<AudioEntryHeader[]> {\n    return this.database.audioEntries\n      .where('description')\n      .equalsIgnoreCase(description)\n      .toArray();\n  }\n\n  async getEntry(date: Date): Promise<AudioEntry | undefined> {\n    const header = await this.database.audioEntries.get(date);\n    const data = await this.database.audioData.get(date);\n    if (header && data) return { ...header, ...data };\n    return undefined;\n  }\n\n  getAllEntriesDates(): Promise<Date[]> {\n    return this.database.audioEntries.toCollection().primaryKeys();\n  }\n\n  getMonthEntriesHeader(monthDate: Date): Promise<AudioEntryHeader[]> {\n    return this.database.audioEntries\n      .where('date')\n      .between(getFirstMonthDay(monthDate), getEndMonthDay(monthDate))\n      .toArray();\n  }\n\n  getDayEntriesHeader(day: Date): Promise<AudioEntryHeader[]> {\n    return this.database.audioEntries\n      .where('date')\n      .between(getStartOfDay(day), getEndOfDay(day))\n      .toArray();\n  }\n}\n","import Dexie from 'dexie';\nimport { AudioData, AudioEntryHeader, User } from './types';\n\nexport default class LocalDatabase extends Dexie {\n  readonly audioEntries: Dexie.Table<AudioEntryHeader, Date>;\n\n  readonly audioData: Dexie.Table<AudioData, Date>;\n\n  readonly user: Dexie.Table<User, string>;\n\n  constructor() {\n    super('LocalDatabase');\n\n    this.version(1).stores({\n      audioEntries: 'date,description',\n      user: 'name',\n      audioData: 'date',\n    });\n\n    this.user = this.table('user');\n    this.audioEntries = this.table('audioEntries');\n    this.audioData = this.table('audioData');\n  }\n}\n","import { Maybe } from 'purify-ts/Maybe';\nimport { MaybeAsync } from 'purify-ts/MaybeAsync';\n\nexport function getFirst<T>(array: T[]): MaybeAsync<T> {\n  return MaybeAsync.liftMaybe(Maybe.fromFalsy(array[0]));\n}\n\nexport function WithTrace<I, R>(func: (inpu: I) => R, message = '') {\n  return (input: I): R => {\n    console.log(`TRACE:${message} `, input);\n    // debugger;\n    return func(input);\n  };\n}\n","/* eslint-disable no-debugger */\nimport { MaybeAsync } from 'purify-ts/MaybeAsync';\nimport { getFirst } from '../../utils/FunctionalUtils';\nimport LocalDatabase from './LocalDatabase';\nimport { User } from './types';\n\nexport default class UserDb {\n  private readonly database: LocalDatabase;\n\n  constructor(database: LocalDatabase) {\n    this.database = database;\n  }\n\n  clearUser(): MaybeAsync<number> {\n    return MaybeAsync(() => this.database.user.toCollection().delete());\n  }\n\n  getUser(): MaybeAsync<User> {\n    return MaybeAsync(() => this.database.user.toArray()).chain(getFirst);\n  }\n\n  createUser(user: User): MaybeAsync<User> {\n    return this.clearUser().chain(() =>\n      MaybeAsync(() => this.database.user.add(user)).chain(() => this.getUser())\n    );\n  }\n}\n","import AudioEntriesDb from './AudioEntriesDb';\nimport LocalDatabase from './LocalDatabase';\nimport UserDb from './UserDb';\n\nconst localdb = new LocalDatabase();\nlocaldb.open().catch((e) => console.log(e));\n\nconst audiodb = new AudioEntriesDb(localdb);\nexport { audiodb };\n\nconst userdb = new UserDb(localdb);\nexport { userdb };\n","import { isConstructorDeclaration } from 'typescript';\n\nexport class AudioController {\n  private audio: HTMLAudioElement;\n\n  constructor() {\n    const audio = document.createElement('audio');\n    audio.preload = 'auto';\n    document.body.append(audio);\n    this.audio = audio;\n\n    // Workaround for bug in chrome\n    audio.addEventListener('loadedmetadata', () => {\n      if (audio.duration === Infinity) {\n        audio.currentTime = Number.MAX_SAFE_INTEGER;\n\n        audio.ontimeupdate = () => {\n          audio.ontimeupdate = () => {};\n\n          audio.currentTime = 0.1;\n          audio.currentTime = 0;\n        };\n      }\n    });\n  }\n\n  setAudioSource(src: string): void {\n    this.stopPlaying();\n    this.audio.src = src;\n    this.audio.load();\n    this.audio.currentTime = 0;\n  }\n\n  startPlaying(): void {\n    this.audio.play();\n  }\n\n  pausePlaying(): void {\n    this.audio.pause();\n  }\n\n  stopPlaying(): void {\n    this.audio.pause();\n    this.audio.currentTime = 0;\n  }\n\n  seekTo(position: number): void {\n    if (position > 0 && position < this.audio.duration) {\n      this.audio.currentTime = position;\n    }\n  }\n\n  getAudioDuration(): number {\n    const { duration } = this.audio;\n\n    if (Number.isNaN(duration) || !Number.isFinite(duration)) return 0;\n    return duration ?? 0;\n  }\n\n  onAudioDurantionChange(func: (newAudioDuration: number) => void): void {\n    this.audio.addEventListener('durationchange', () => {\n      func(this.getAudioDuration());\n    });\n  }\n\n  onAudioPlaybackEnd(func: (endTime: number) => void): void {\n    this.audio.addEventListener('ended', () => {\n      func(this.audio.currentTime);\n    });\n  }\n\n  onCurrentTimeUpdate(\n    func: (newTime: number) => void,\n    updatePeriod = 100\n  ): void {\n    let shouldUpdate = true;\n\n    const callUpdatePeriod = () => {\n      if (shouldUpdate) {\n        func(this.audio.currentTime);\n\n        setTimeout(() => {\n          shouldUpdate = true;\n        }, updatePeriod);\n      }\n      shouldUpdate = false;\n    };\n\n    this.audio.addEventListener('timeupdate', () => {\n      callUpdatePeriod();\n    });\n\n    this.audio.addEventListener('ended', () => {\n      func(this.audio.currentTime);\n    });\n\n    this.audio.addEventListener('seeked', () => {\n      func(this.audio.currentTime);\n    });\n  }\n}\n\nconst audio = new AudioController();\nexport default audio;\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport audio from '../AudioController/AudioController';\n\nimport { PlaybackState } from '../state/PlaybackTypes';\n\nexport const loadAudioDuration = createAsyncThunk(\n  'playback/loadAudioDuration',\n  () => {\n    return audio.getAudioDuration();\n  }\n);\n\nexport const changedAudioTime = createAction<number>(\n  'playback/changedAudioTime'\n);\n\nexport const createdAudioUrl = createAsyncThunk(\n  'playback/createdAudioUrl',\n  (audioData: Blob) => {\n    const audioURL = window.URL.createObjectURL(audioData);\n    audio.setAudioSource(audioURL);\n    return audioURL;\n  }\n);\n\nexport const startPlayingRecord = createAsyncThunk(\n  'playback/startPlayingRecord',\n  () => {\n    audio.startPlaying();\n  }\n);\n\nexport const pausePlayingRecord = createAsyncThunk(\n  'playback/pausePlayingRecord',\n  () => {\n    audio.pausePlaying();\n  }\n);\n\nexport const stopPlayingRecord = createAsyncThunk(\n  'playback/stopPlayingRecord',\n  () => {\n    audio.stopPlaying();\n  }\n);\n\nexport const pausePlayButtonClicked = createAsyncThunk(\n  'playback/pausePlayButtonClicked',\n  (_, { dispatch, getState }) => {\n    const {\n      playback: { isPlaying, audioUrl },\n    } = getState() as { playback: PlaybackState };\n\n    if (audioUrl)\n      if (isPlaying) dispatch(pausePlayingRecord());\n      else dispatch(startPlayingRecord());\n  }\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { PromiseTimeout } from '../../../utils/testing/PromiseTimeout';\nimport { audiodb } from '../../Db/Databases';\nimport { AudioEntryHeader } from '../../Db/types';\nimport { createdAudioUrl } from '../../Playback/actions/PlaybackActions';\n\nexport const loadMonthRecordigns = createAsyncThunk<AudioEntryHeader[], Date>(\n  'calendar/loadMonthRecordigns',\n  async (monthDate) => {\n    return audiodb.getMonthEntriesHeader(monthDate);\n  }\n);\n\nexport const selectedDay = createAsyncThunk(\n  'calendar/selectedDay',\n  (day: number) => {\n    return day;\n  }\n);\n\nexport const loadAudioPlayback = createAsyncThunk(\n  'calendar/loadAudioPlayback',\n  async (date: Date, { dispatch }) => {\n    const audioData = await audiodb.getEntry(date);\n    if (audioData) dispatch(createdAudioUrl(audioData.audio));\n  }\n);\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit';\nimport { loadMonthRecordigns, selectedDay } from '../actions/CalendarActions';\nimport { CalendarState } from './CalendarTypes';\n\nexport const InitialCalendarState: CalendarState = {\n  selectedDay: null,\n  recordings: [],\n};\n\nconst CalendarSlice = createReducer(InitialCalendarState, (builder) => {\n  builder\n    .addCase(loadMonthRecordigns.fulfilled, (state, action) => {\n      state.recordings = action.payload;\n    })\n    .addCase(selectedDay.fulfilled, (state, action) => {\n      state.selectedDay = action.payload;\n    });\n});\n\nexport default CalendarSlice;\n","export function AddToCypressWindow(name: string, obj: any) {\n  const windowNotTyped = window as any;\n\n  if (windowNotTyped.Cypress) {\n    windowNotTyped[name] = obj;\n  }\n}\n","import _ from 'lodash';\n\nexport function isBuffersEql(\n  buffer1: ArrayBuffer,\n  buffer2: ArrayBuffer\n): boolean {\n  const data1 = new Uint8Array(buffer1);\n  const data2 = new Uint8Array(buffer2);\n\n  return _.isEqual(data1, data2);\n}\n\nexport function ArrayBufferToStr(data: ArrayBuffer): string {\n  const decoder = new TextDecoder();\n  return decoder.decode(data);\n}\n\nexport function StrToArrayBuffer(data: string): ArrayBuffer {\n  const encoder = new TextEncoder();\n  return encoder.encode(data);\n}\n\nconst splitSeparator = ',';\n\nexport function StrToUint8Array(data: string): Uint8Array {\n  const dataArray = data.split(splitSeparator).map((value) => Number(value));\n  return Uint8Array.from(dataArray);\n}\n\nexport function Uint8ArrayToStr(data: Uint8Array): string {\n  return data.join(splitSeparator);\n}\n","import { curry } from 'purify-ts/Function';\nimport { MaybeAsync } from 'purify-ts/MaybeAsync';\nimport { ArrayBufferToStr } from '../../utils/Buffer/BufferUtils';\n\nexport interface EncryptResult {\n  algorithm: string;\n  iv: Uint8Array;\n  encryptedData: ArrayBuffer;\n}\n\nexport interface Secret {\n  secret: string;\n  salt: Uint8Array;\n}\n\nexport interface KeyParameters {\n  key: CryptoKey;\n  salt: Uint8Array;\n}\n\nexport function Decrypt(\n  crypto: EncryptResult,\n  keyParam: KeyParameters\n): MaybeAsync<ArrayBuffer> {\n  return decryptUsingKey(crypto.encryptedData, crypto.iv, keyParam.key);\n}\n\nexport function Encrypt(\n  data: ArrayBuffer,\n  keyParam: KeyParameters\n): MaybeAsync<EncryptResult> {\n  const iv = GenerateSalt(12);\n\n  return encryptUsingKey(data, iv, keyParam.key).map((encryptedData) => ({\n    algorithm: 'AES-GCM',\n    iv,\n    encryptedData,\n  }));\n}\n\nexport function CreateRandomKey(): MaybeAsync<CryptoKey> {\n  return MaybeAsync(() =>\n    window.crypto.subtle.generateKey(\n      {\n        name: 'AES-GCM',\n        length: 256,\n      },\n      true,\n      ['encrypt', 'decrypt']\n    )\n  );\n}\n\nexport function CryptoKeyToBuffer(key: CryptoKey): MaybeAsync<ArrayBuffer> {\n  return MaybeAsync(() => window.crypto.subtle.exportKey('raw', key));\n}\n\nexport function CryptoKeyToStr(key: CryptoKey): MaybeAsync<string> {\n  return CryptoKeyToBuffer(key).map(ArrayBufferToStr);\n}\n\nexport function GenerateKeyFromSecret(\n  secretParam: Secret\n): MaybeAsync<KeyParameters> {\n  const generateKeyFromSecret = curry(generateKeyFromMaterial);\n\n  return createKeyMaterial(secretParam.secret)\n    .chain(generateKeyFromSecret(secretParam.salt))\n    .map((key) => ({ key, salt: secretParam.salt }));\n}\n\nexport function GenerateSaltForSecret(secret: string): Secret {\n  const salt = GenerateSalt(16);\n  return {\n    salt,\n    secret,\n  };\n}\n\nfunction encryptUsingKey(\n  data: ArrayBuffer,\n  iv: Uint8Array,\n  key: CryptoKey\n): MaybeAsync<ArrayBuffer> {\n  return MaybeAsync(() =>\n    window.crypto.subtle.encrypt(\n      {\n        name: 'AES-GCM',\n        iv,\n      },\n      key,\n      data\n    )\n  );\n}\n\nfunction decryptUsingKey(\n  data: ArrayBuffer,\n  iv: Uint8Array,\n  key: CryptoKey\n): MaybeAsync<ArrayBuffer> {\n  return MaybeAsync(() =>\n    window.crypto.subtle.decrypt(\n      {\n        name: 'AES-GCM',\n        iv,\n      },\n      key,\n      data\n    )\n  );\n}\n\nfunction createKeyMaterial(secret: string): MaybeAsync<CryptoKey> {\n  return MaybeAsync(() => {\n    const encoder = new TextEncoder();\n\n    return window.crypto.subtle.importKey(\n      'raw',\n      encoder.encode(secret),\n      'PBKDF2',\n      false,\n      ['deriveKey']\n    );\n  });\n}\n\nfunction generateKeyFromMaterial(\n  salt: Uint8Array,\n  material: CryptoKey\n): MaybeAsync<CryptoKey> {\n  return MaybeAsync(() =>\n    window.crypto.subtle.deriveKey(\n      {\n        name: 'PBKDF2',\n        salt,\n        iterations: 100000,\n        hash: 'SHA-256',\n      },\n      material,\n      { name: 'AES-GCM', length: 256 },\n      true,\n      ['encrypt', 'decrypt']\n    )\n  );\n}\n\nexport function GenerateSalt(bytes: number): Uint8Array {\n  return window.crypto.getRandomValues(new Uint8Array(bytes));\n}\n","import argon2 from 'argon2-browser';\nimport { MaybeAsync } from 'purify-ts/MaybeAsync';\nimport { ArrayBufferToStr } from '../../utils/Buffer/BufferUtils';\nimport { CryptoKeyToBuffer, GenerateSalt } from './Authenticate';\n\nexport interface Argon2BrowserHashResult {\n  encoded: string;\n  hash: Uint8Array;\n  hashHex: string;\n}\n\nexport function HashKeyToStorage(\n  key: CryptoKey\n): MaybeAsync<Argon2BrowserHashResult> {\n  const salt = GenerateSalt(16);\n  return CryptoKeyToBuffer(key)\n    .map(ArrayBufferToStr)\n    .chain((keydata) => argon2Hash(keydata, salt));\n}\n\nexport function VerifyHash(\n  key: CryptoKey | string,\n  encodedKey: string\n): MaybeAsync<void> {\n  if (typeof key === 'string') return argon2Verify(key, encodedKey);\n\n  return CryptoKeyToBuffer(key)\n    .map(ArrayBufferToStr)\n    .chain((keyStr) => argon2Verify(keyStr, encodedKey));\n}\n\nfunction argon2Verify(password: string, encodedKey: string) {\n  return MaybeAsync(() =>\n    argon2.verify({\n      pass: password,\n      encoded: encodedKey,\n      type: argon2.ArgonType.Argon2id,\n    })\n  );\n}\n\nfunction argon2Hash(keyData: string, salt: Uint8Array) {\n  return MaybeAsync(() =>\n    argon2.hash({\n      pass: keyData,\n      salt,\n      type: argon2.ArgonType.Argon2id,\n    })\n  );\n}\n","import { MaybeAsync } from 'purify-ts/MaybeAsync';\nimport {\n  StrToUint8Array,\n  Uint8ArrayToStr,\n} from '../../utils/Buffer/BufferUtils';\n\nimport {\n  GenerateKeyFromSecret,\n  GenerateSaltForSecret,\n  KeyParameters,\n  Secret,\n} from '../Crypto/Authenticate';\nimport {\n  Argon2BrowserHashResult,\n  HashKeyToStorage,\n  VerifyHash,\n} from '../Crypto/HashStorage';\nimport { LoginKey, User } from '../Db/types';\n\nexport function AuthenticateUser(\n  user: User,\n  password: string\n): MaybeAsync<CryptoKey> {\n  const {\n    loginKey: { salt, encodedKey },\n  } = user;\n\n  const secret: Secret = {\n    salt: StrToUint8Array(salt),\n    secret: password,\n  };\n\n  return GenerateKeyFromSecret(secret).chain((keyParam) =>\n    VerifyHash(keyParam.key, encodedKey).map(() => keyParam.key)\n  );\n}\n\nexport function CreateNewUser(\n  name: string,\n  password: string\n): MaybeAsync<User> {\n  const secret = GenerateSaltForSecret(password);\n\n  return GenerateKeyFromSecret(secret)\n    .chain(hashKey)\n    .map((loginKey) => createUser(name, loginKey));\n}\n\nfunction createUser(name: string, loginKey: LoginKey): User {\n  return { name, loginKey };\n}\n\nfunction hashKey(keyParam: KeyParameters): MaybeAsync<LoginKey> {\n  const salt = Uint8ArrayToStr(keyParam.salt);\n  const hashedKey = HashKeyToStorage(keyParam.key);\n\n  return buildLoginKey(salt, hashedKey);\n}\n\nfunction buildLoginKey(\n  salt: string,\n  encodedKey: MaybeAsync<Argon2BrowserHashResult>\n): MaybeAsync<LoginKey> {\n  return encodedKey.map((result) => ({\n    encodedKey: result.encoded,\n    salt,\n  }));\n}\n","import { AddToCypressWindow } from '../../utils/testing/CypressUtils';\nimport { CryptoKeyToStr } from '../Crypto/Authenticate';\nimport { userdb } from '../Db/Databases';\nimport { User } from '../Db/types';\nimport UserDb from '../Db/UserDb';\nimport { AuthenticateUser, CreateNewUser } from './Login';\n\nexport class AuthSession {\n  private storage: Storage;\n\n  private users: UserDb;\n\n  private readonly authInfo = 'authInfo';\n\n  constructor(storage: Storage, users: UserDb) {\n    this.storage = storage;\n    this.users = users;\n  }\n\n  private getAuthSession() {\n    return this.storage.getItem(this.authInfo);\n  }\n\n  private setAuthSession(sessionInfo: string) {\n    this.storage.setItem(this.authInfo, sessionInfo);\n  }\n\n  isAuthenticated(): boolean {\n    return this.getAuthSession() !== null;\n  }\n\n  // getUserKey(): MaybeAsync<CryptoKey> {\n  // //  return this.getAuthSession();\n  // // TODO create function to convert string to crypto key\n  // }\n\n  authenticate(password: string): Promise<boolean> {\n    return this.users\n      .getUser()\n      .chain((user) => AuthenticateUser(user, password))\n      .chain(CryptoKeyToStr)\n      .ifJust((key) => this.setAuthSession(key))\n      .run()\n      .then((result) => result.isJust());\n  }\n\n  createNewUser(name: string, password: string): Promise<User | null> {\n    return CreateNewUser(name, password)\n      .chain((user) => this.users.createUser(user))\n      .run()\n      .then((maybe) => maybe.extractNullable());\n  }\n}\n\nconst authSession = new AuthSession(window.sessionStorage, userdb);\nAddToCypressWindow('authSession', authSession);\n\nexport default authSession;\n","/* eslint-disable no-param-reassign */\nimport {\n  ActionReducerMapBuilder,\n  AnyAction,\n  AsyncThunk,\n} from '@reduxjs/toolkit';\n\nexport enum AsyncActionStatus {\n  Completed,\n  Pending,\n  NotStarted,\n  Rejected,\n}\n\nexport function AsyncActionStatusToStr(\n  actionStatus: AsyncActionStatus\n): string {\n  switch (actionStatus) {\n    case AsyncActionStatus.Completed:\n      return 'Completed';\n    case AsyncActionStatus.Pending:\n      return 'Pending';\n    case AsyncActionStatus.NotStarted:\n      return 'NotStarted';\n    case AsyncActionStatus.Rejected:\n      return 'Rejected';\n    default:\n      return 'Error';\n  }\n}\n\ntype GenericAsyncThunk = AsyncThunk<unknown, unknown, any>;\ntype PendingAction = ReturnType<GenericAsyncThunk['pending']>;\ntype RejectedAction = ReturnType<GenericAsyncThunk['rejected']>;\ntype FulfilledAction = ReturnType<GenericAsyncThunk['fulfilled']>;\n\nexport function isPendingAction(action: AnyAction): action is PendingAction {\n  return action.type.endsWith('/pending');\n}\n\nexport function isRejectedAction(action: AnyAction): action is RejectedAction {\n  return action.type.endsWith('/rejected');\n}\n\nexport function isFulfilledAction(\n  action: AnyAction\n): action is FulfilledAction {\n  return action.type.endsWith('/fulfilled');\n}\n\nexport function addPendingMatcher(\n  fieldInSlice: string,\n  actionName: string\n): [\n  (action: AnyAction) => action is PendingAction,\n  (state: any, action: PendingAction) => void\n] {\n  return [\n    isPendingAction,\n    (state, action) => {\n      if (action.type.includes(actionName) && state && state[fieldInSlice]) {\n        state[fieldInSlice] = AsyncActionStatus.Pending;\n      }\n    },\n  ];\n}\n\nexport function addRejectedMatcher(\n  fieldInSlice: string,\n  actionName: string\n): [\n  (action: AnyAction) => action is RejectedAction,\n  (state: any, action: RejectedAction) => void\n] {\n  return [\n    isRejectedAction,\n    (state, action) => {\n      if (action.type.includes(actionName) && state && state[fieldInSlice]) {\n        state[fieldInSlice] = AsyncActionStatus.Rejected;\n      }\n    },\n  ];\n}\n\nexport function addFulfilledMatcher(\n  fieldInSlice: string,\n  actionName: string\n): [\n  (action: AnyAction) => action is FulfilledAction,\n  (state: any, action: FulfilledAction) => void\n] {\n  return [\n    isFulfilledAction,\n    (state, action) => {\n      if (action.type.includes(actionName) && state && state[fieldInSlice]) {\n        state[fieldInSlice] = AsyncActionStatus.Completed;\n        if (typeof action.payload === 'boolean')\n          if (action.payload === false)\n            state[fieldInSlice] = AsyncActionStatus.Rejected;\n      }\n    },\n  ];\n}\n\nexport function addDefaultAsyncMatcher(\n  builder: ActionReducerMapBuilder<unknown>,\n  fieldInSlice: string,\n  actionName: string\n): void {\n  builder\n    .addMatcher(...addPendingMatcher(fieldInSlice, actionName))\n    .addMatcher(...addFulfilledMatcher(fieldInSlice, actionName))\n    .addMatcher(...addRejectedMatcher(fieldInSlice, actionName));\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport authSession from '../../modules/Authentication/AuthSession';\nimport { UserState } from '../../modules/Authentication/state/UserTypes';\nimport { userdb } from '../../modules/Db/Databases';\nimport { AsyncActionStatus } from '../../utils/ReduxUtils/AsyncActionHelpers';\nimport { AddToCypressWindow } from '../../utils/testing/CypressUtils';\n\nexport const loadInitialUserState = createAsyncThunk<UserState | null>(\n  'user/loadInitialState',\n  async () => {\n    const userJust = await userdb.getUser().run();\n    const user = userJust.extract();\n    const isLoggedIn = authSession.isAuthenticated();\n\n    if (user) {\n      return {\n        isLoggedIn: isLoggedIn\n          ? AsyncActionStatus.Completed\n          : AsyncActionStatus.NotStarted,\n        isUserCreated: AsyncActionStatus.Completed,\n        name: user.name,\n        isLoadingInitialState: false,\n      };\n    }\n\n    return null;\n  }\n);\n\nAddToCypressWindow('loadInitialUserState', loadInitialUserState);\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit';\nimport { loadInitialUserState } from '../../../app/LoadInitialState/LoadInitialStateActions';\nimport {\n  addDefaultAsyncMatcher,\n  AsyncActionStatus,\n} from '../../../utils/ReduxUtils/AsyncActionHelpers';\n\nimport { UserState } from './UserTypes';\n\nexport const InitialUserState: UserState = {\n  isLoggedIn: AsyncActionStatus.NotStarted,\n  isUserCreated: AsyncActionStatus.NotStarted,\n  isLoadingInitialState: true,\n  name: '',\n};\n\nconst UserSlice = createReducer(InitialUserState, (builder) => {\n  builder.addCase(\n    loadInitialUserState.fulfilled,\n    (state, action): UserState => {\n      const initialState = action.payload;\n      if (initialState) return initialState;\n\n      return { ...state, isLoadingInitialState: false };\n    }\n  );\n  addDefaultAsyncMatcher(builder, 'isLoggedIn', 'loginUser');\n  addDefaultAsyncMatcher(builder, 'isUserCreated', 'createNewUser');\n});\n\nexport default UserSlice;\n","export enum MicAvailability {\n  Available,\n  NotAvailable,\n  Pending,\n}\n\nexport interface RecordState {\n  isRecording: boolean;\n  isMicrophoneAvailable: MicAvailability;\n}\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  changedAudioTime,\n  createdAudioUrl,\n  loadAudioDuration,\n  pausePlayingRecord,\n  startPlayingRecord,\n  stopPlayingRecord,\n} from '../actions/PlaybackActions';\nimport { PlaybackState } from './PlaybackTypes';\n\nexport const InitialPlaybackState: PlaybackState = {\n  audioUrl: '',\n  isPlaying: false,\n  audioDuration: 0,\n  currentAudioTime: 0,\n};\n\nconst PlaybackSlice = createReducer(InitialPlaybackState, (builder) =>\n  builder\n    .addCase(createdAudioUrl.fulfilled, (state, action) => {\n      state.audioUrl = action.payload;\n    })\n    .addCase(startPlayingRecord.fulfilled, (state) => {\n      state.isPlaying = true;\n    })\n    .addCase(pausePlayingRecord.fulfilled, (state) => {\n      state.isPlaying = false;\n    })\n    .addCase(stopPlayingRecord.fulfilled, (state) => {\n      state.isPlaying = false;\n    })\n    .addCase(loadAudioDuration.fulfilled, (state, action) => {\n      state.audioDuration = action.payload;\n    })\n    .addCase(changedAudioTime, (state, action) => {\n      state.currentAudioTime = action.payload;\n    })\n);\n\nexport default PlaybackSlice;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { audiodb } from '../Databases';\nimport { AudioEntry } from '../types';\n\nexport const saveRecordInDb = createAsyncThunk<void, Blob>(\n  'db/saveRecordInDb',\n  (audioData: Blob) => {\n    const entry: AudioEntry = {\n      date: new Date(),\n      description: 'none yet',\n      length: 20,\n      audio: audioData,\n    };\n    audiodb.addEntry(entry);\n  }\n);\n","// TODO - add error handling\nexport default class MicrophoneController {\n  private readonly mediaRecorder: MediaRecorder;\n\n  private dataChunks: Blob[];\n\n  constructor(mediaRecorder: MediaRecorder) {\n    this.mediaRecorder = mediaRecorder;\n    this.dataChunks = new Array<Blob>();\n\n    this.mediaRecorder.ondataavailable = (event: BlobEvent) => {\n      this.dataChunks.push(event.data);\n    };\n\n    this.mediaRecorder.onerror = (event) => console.log(event);\n  }\n\n  start(): void {\n    this.dataChunks = new Array<Blob>();\n    this.mediaRecorder.start();\n  }\n\n  stop(): Promise<Blob> {\n    const stopPromise = new Promise<Blob>((resolve) => {\n      this.mediaRecorder.onstop = () => {\n        resolve(this.getRecordedData());\n      };\n    });\n\n    this.mediaRecorder.stop();\n\n    return stopPromise;\n  }\n\n  getRecordedData(): Blob {\n    const blob = new Blob(this.dataChunks, {\n      type: this.mediaRecorder.mimeType,\n    });\n    return blob;\n  }\n}\n","import MicrophoneController from './MicController';\n\nexport class Microphone {\n  private microphoneController: MicrophoneController | null = null;\n\n  async askForUserPermission(): Promise<void> {\n    if (this.microphoneController) return;\n\n    const microphoneStream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n    });\n\n    const media = new MediaRecorder(microphoneStream, {\n      audioBitsPerSecond: 256000,\n    });\n    this.microphoneController = new MicrophoneController(media);\n  }\n\n  startRecording(): void {\n    if (this.microphoneController) this.microphoneController.start();\n  }\n\n  async stopRecording(): Promise<Blob | null> {\n    if (!this.microphoneController) return null;\n    return this.microphoneController.stop();\n  }\n}\n\nconst microphone = new Microphone();\nexport default microphone;\n","import { AsyncThunk, createAsyncThunk } from '@reduxjs/toolkit';\nimport { saveRecordInDb } from '../Db/actions/AudioDbActions';\nimport { createdAudioUrl } from '../Playback/actions/PlaybackActions';\n\nimport microphone from './Microphone/Microphone';\nimport { MicAvailability, RecordState } from './state/RecordTypes';\n\nexport const askForMicrophonePermission = createAsyncThunk(\n  'record/askForMicrophonePermission',\n  async () => {\n    await microphone.askForUserPermission();\n  }\n);\n\nexport const startRecording = createAsyncThunk(\n  'record/startRecording',\n  async () => {\n    microphone.startRecording();\n  }\n);\n\nexport const stopRecording = createAsyncThunk(\n  'record/stopRecording',\n  async (_, { dispatch }) => {\n    const audioData = await microphone.stopRecording();\n\n    if (audioData) {\n      dispatch(createdAudioUrl(audioData));\n      dispatch(saveRecordInDb(audioData));\n    }\n  }\n);\n\nexport const recordButtonClicked = createAsyncThunk(\n  'record/recordButtonClicked',\n  async (_, { dispatch, getState }) => {\n    const {\n      record: { isMicrophoneAvailable, isRecording },\n    } = getState() as { record: RecordState };\n\n    const nextState = calculateNextRecordAction(\n      isMicrophoneAvailable,\n      isRecording\n    );\n\n    if (nextState) dispatch(nextState());\n  }\n);\n\nexport function calculateNextRecordAction(\n  isMicrophoneAvailable: MicAvailability,\n  isRecording: boolean\n): AsyncThunk<void, void, {}> | null {\n  if (isRecording) return stopRecording;\n\n  if (isMicrophoneAvailable === MicAvailability.NotAvailable) {\n    return askForMicrophonePermission;\n  }\n\n  if (isMicrophoneAvailable === MicAvailability.Available) {\n    return startRecording;\n  }\n\n  return null;\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nimport {\n  askForMicrophonePermission,\n  startRecording,\n  stopRecording,\n} from '../RecordActions';\nimport { MicAvailability, RecordState } from './RecordTypes';\n\nexport const InitialRecordState: RecordState = {\n  isRecording: false,\n  isMicrophoneAvailable: MicAvailability.NotAvailable,\n};\n\nconst RecordSlice = createSlice({\n  name: 'record',\n  initialState: InitialRecordState,\n  reducers: {},\n\n  extraReducers: (builder) =>\n    builder\n      .addCase(askForMicrophonePermission.fulfilled, (state) => {\n        state.isMicrophoneAvailable = MicAvailability.Available;\n      })\n      .addCase(askForMicrophonePermission.rejected, (state) => {\n        state.isMicrophoneAvailable = MicAvailability.NotAvailable;\n      })\n      .addCase(askForMicrophonePermission.pending, (state) => {\n        state.isMicrophoneAvailable = MicAvailability.Pending;\n      })\n      .addCase(startRecording.fulfilled, (state) => {\n        state.isRecording = true;\n      })\n      .addCase(stopRecording.fulfilled, (state) => {\n        state.isRecording = false;\n      }),\n});\n\nexport default RecordSlice.reducer;\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport CalendarSlice, {\n  InitialCalendarState,\n} from '../modules/Calendar/store/CalendarSlice';\nimport UserSlice, {\n  InitialUserState,\n} from '../modules/Authentication/state/UserSlice';\nimport PlaybackSlice, {\n  InitialPlaybackState,\n} from '../modules/Playback/state/PlaybackSlice';\nimport RecordSlice, {\n  InitialRecordState,\n} from '../modules/Recording/state/RecordSlice';\nimport { AddToCypressWindow } from '../utils/testing/CypressUtils';\n\nconst rootReducer = combineReducers({\n  record: RecordSlice,\n  playback: PlaybackSlice,\n  user: UserSlice,\n  calendar: CalendarSlice,\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nconst AppInitialState: AppState = {\n  calendar: InitialCalendarState,\n  record: InitialRecordState,\n  playback: InitialPlaybackState,\n  user: InitialUserState,\n};\n\nexport function CreateStore(partialState?: Partial<AppState>) {\n  const appInitialState = {\n    ...AppInitialState,\n    ...partialState,\n  };\n\n  return configureStore({\n    reducer: rootReducer,\n    preloadedState: appInitialState,\n  });\n}\n\nconst store = CreateStore();\nexport default store;\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useTypedDispatch = () => useDispatch<AppDispatch>();\n\nexport const useTypedSelector: TypedUseSelectorHook<AppState> = useSelector;\n\n// Dispatch actions from cypress\nAddToCypressWindow('store', store);\n","import { AppState } from '../../../app/Store';\n\nexport const selectIsUserCreated = (state: AppState) =>\n  state.user.isUserCreated;\n\nexport const selectIsLoadingInitialState = (state: AppState) =>\n  state.user.isLoadingInitialState;\n\nexport const selectIsUserLoggedIn = (state: AppState) => state.user.isLoggedIn;\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useTypedSelector } from '../../app/Store';\nimport { AsyncActionStatus } from '../../utils/ReduxUtils/AsyncActionHelpers';\nimport { selectIsUserLoggedIn } from './state/UserSelectors';\n\nexport function OnlyLoggedIn({\n  children,\n  redirect = true,\n}: {\n  redirect?: boolean;\n  children: React.ReactNode;\n}): JSX.Element {\n  const isUsedloggedIn = useTypedSelector(selectIsUserLoggedIn);\n\n  return (\n    <>\n      {isUsedloggedIn === AsyncActionStatus.Completed\n        ? children\n        : redirect && <Navigate to=\"/login\" replace />}\n    </>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\nimport { AppState } from '../../../app/Store';\n\nexport const selectAudioUrl = (state: AppState) => state.playback.audioUrl;\n\nexport const selectIsPlaying = (state: AppState) => state.playback.isPlaying;\n\nexport const selectAudioDuration = (state: AppState) =>\n  state.playback.audioDuration;\n\nexport const selectCurrentAudioTime = (state: AppState) =>\n  state.playback.currentAudioTime;\n\nexport const selectCurrentAudioCompletedPercentage = createSelector(\n  selectCurrentAudioTime,\n  selectAudioDuration,\n  (currentTime, audioDuration) => (currentTime / audioDuration) * 100\n);\n","import React from 'react';\nimport {\n  Slider,\n  SliderFilledTrack,\n  SliderTrack,\n  SliderThumb,\n  Text,\n  HStack,\n} from '@chakra-ui/react';\nimport { useTypedSelector } from '../../../app/Store';\nimport {\n  selectAudioDuration,\n  selectCurrentAudioCompletedPercentage,\n  selectCurrentAudioTime,\n} from '../state/PlaybackSelectors';\n\nimport audio from '../AudioController/AudioController';\n\nfunction seekAudioTo(sliderValue: number): void {\n  const duration = audio.getAudioDuration();\n  const seekPosition = duration * (sliderValue / 100);\n  audio.seekTo(seekPosition);\n}\n\nfunction AudioSlider(): JSX.Element {\n  const audioDuration = useTypedSelector(selectAudioDuration);\n\n  const audioPercentage = useTypedSelector(\n    selectCurrentAudioCompletedPercentage\n  );\n\n  const currentPosition = useTypedSelector(selectCurrentAudioTime);\n\n  return (\n    <HStack spacing={3}>\n      <Text fontSize=\"2xl\">{currentPosition.toFixed(2)}</Text>\n\n      <Slider\n        aria-label=\"AudioPlaybackSlider\"\n        defaultValue={0}\n        value={audioPercentage}\n        focusThumbOnChange={false}\n        onChange={(value) => {\n          seekAudioTo(value);\n        }}\n      >\n        <SliderTrack>\n          <SliderFilledTrack />\n        </SliderTrack>\n        <SliderThumb />\n      </Slider>\n\n      <Text fontSize=\"2xl\">{audioDuration.toFixed(2)}</Text>\n    </HStack>\n  );\n}\n\nexport default AudioSlider;\n","import React from 'react';\nimport { Grid, GridItem, Icon, IconButton } from '@chakra-ui/react';\nimport {\n  MdForward10,\n  MdReplay10,\n  MdStop,\n  MdPlayArrow,\n  MdPause,\n} from 'react-icons/md';\nimport { useTypedDispatch, useTypedSelector } from '../../../app/Store';\n\nimport {\n  selectAudioDuration,\n  selectIsPlaying,\n} from '../state/PlaybackSelectors';\nimport {\n  pausePlayButtonClicked,\n  stopPlayingRecord,\n} from '../actions/PlaybackActions';\nimport AudioSlider from './AudioSlider';\n\nfunction AudioPlayer(): JSX.Element {\n  const dispatch = useTypedDispatch();\n  const isPlaying = useTypedSelector(selectIsPlaying);\n  const audioDuration = useTypedSelector(selectAudioDuration);\n\n  return (\n    <Grid\n      p={[3, 3, 4, 5]}\n      templateColumns=\"1fr repeat(3, auto) 1fr\"\n      justifyItems=\"center\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      alignContent=\"center\"\n    >\n      <GridItem colStart={2}>\n        <IconButton\n          isRound\n          colorScheme=\"green\"\n          aria-label=\"Forward\"\n          size=\"md\"\n          mx={2}\n          icon={<Icon boxSize={6} as={MdForward10} />}\n        />\n      </GridItem>\n      <GridItem>\n        <IconButton\n          isRound\n          colorScheme=\"green\"\n          aria-label=\"PlayPause\"\n          size=\"lg\"\n          mx={['0.5', '1.5', '2.5', '3']}\n          disabled={audioDuration === 0}\n          icon={\n            isPlaying ? (\n              <Icon boxSize={8} as={MdPause} />\n            ) : (\n              <Icon boxSize={8} as={MdPlayArrow} />\n            )\n          }\n          onClick={() => {\n            dispatch(pausePlayButtonClicked());\n          }}\n        />\n      </GridItem>\n      <GridItem>\n        <IconButton\n          isRound\n          colorScheme=\"green\"\n          aria-label=\"Rewind\"\n          size=\"md\"\n          mx={2}\n          icon={<Icon boxSize={6} as={MdReplay10} />}\n        />\n      </GridItem>\n      <GridItem>\n        <IconButton\n          isRound\n          marginLeft={['4', '5', '12']}\n          colorScheme=\"red\"\n          aria-label=\"Stop\"\n          size=\"sm\"\n          icon={<Icon boxSize={4} as={MdStop} />}\n          onClick={() => {\n            dispatch(stopPlayingRecord());\n          }}\n        />\n      </GridItem>\n\n      <GridItem width=\"100%\" colSpan={5} px={5}>\n        <AudioSlider />\n      </GridItem>\n    </Grid>\n  );\n}\n\nexport default AudioPlayer;\n","import React from 'react';\n\nimport AudioPlayer from './components/AudioPlayer';\n\nfunction PlaybackPanel(): JSX.Element {\n  return <AudioPlayer />;\n}\n\nexport default PlaybackPanel;\n","import React from 'react';\n\nimport { Box, BoxProps } from '@chakra-ui/react';\nimport { HTMLMotionProps, motion } from 'framer-motion';\n\nconst MotionBoxChakra = motion(Box);\n\nexport default function MotionBox({\n  children,\n  ...props\n}: BoxProps & HTMLMotionProps<'div'>): JSX.Element {\n  return (\n    <>\n      <MotionBoxChakra {...props}>{children}</MotionBoxChakra>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { AspectRatio, Text } from '@chakra-ui/react';\nimport MotionBox from '../../../components/Motion/MotionBox';\nimport MotionCenter from '../../../components/Motion/MotionCenter';\nimport { useTypedDispatch } from '../../../app/Store';\nimport { selectedDay } from '../actions/CalendarActions';\n\nexport interface TileProps {\n  dayNumber?: number;\n  recordsNumber?: number;\n}\n\nconst Tile: React.FC<TileProps> = ({ dayNumber, recordsNumber = 0 }) => {\n  const dispatch = useTypedDispatch();\n\n  const addTileRecordDecoration = (\n    numberOfRecords: number,\n    element: JSX.Element | null\n  ) => {\n    if (numberOfRecords > 0)\n      return (\n        <MotionCenter\n          bgColor=\"blue.800\"\n          width=\"30%\"\n          height=\"30%\"\n          borderRadius=\"50%\"\n          whileHover={{ scale: 1.2 }}\n        >\n          <MotionCenter\n            bgColor=\"blue.300\"\n            width=\"60%\"\n            height=\"60%\"\n            borderRadius=\"50%\"\n            whileHover={{ scale: 1.5 }}\n          >\n            {element}\n          </MotionCenter>\n        </MotionCenter>\n      );\n\n    return element;\n  };\n\n  return (\n    <AspectRatio ratio={1}>\n      <MotionBox\n        boxSize=\"100%\"\n        bgColor=\"gray.700\"\n        whileTap={{ scale: 0.8 }}\n        whileHover={{ scale: 1.2 }}\n        onClick={() => {\n          if (dayNumber) dispatch(selectedDay(dayNumber));\n        }}\n      >\n        {addTileRecordDecoration(\n          recordsNumber,\n          <Text textAlign=\"center\">{dayNumber}</Text>\n        )}\n      </MotionBox>\n    </AspectRatio>\n  );\n};\n\nexport default Tile;\n","import React from 'react';\nimport { SimpleGrid, Text } from '@chakra-ui/react';\nimport Tile from '../Tile/Tile';\nimport {\n  getWeekDayIndex,\n  getWeekDays,\n  WeekDay,\n} from '../../../utils/DateTime/WeekDays';\nimport MotionBox from '../../../components/Motion/MotionBox';\n\nexport type RecordInDays = {\n  [dayNumber: number]: number;\n};\n\nexport interface CalendarMonthProps {\n  numberOfDays: number;\n  startAtDay: WeekDay;\n  recordsDays: RecordInDays;\n}\n\nconst CalendarMonth: React.FC<CalendarMonthProps> = ({\n  numberOfDays,\n  startAtDay,\n  recordsDays,\n}) => {\n  const tiles = Array.from(Array(numberOfDays).keys(), (key) => key + 1).map(\n    (day) => <Tile dayNumber={day} recordsNumber={recordsDays[day]} />\n  );\n\n  const weekDayOffset = getWeekDayIndex(startAtDay);\n  const tilesOffset = new Array(weekDayOffset).fill(0).map(() => <Tile />);\n\n  const weekDays = getWeekDays();\n  const weekDaysTitles = weekDays.map((day) => (\n    <Text bgColor=\"blue.600\" textAlign=\"center\">\n      {day}\n    </Text>\n  ));\n\n  return (\n    <MotionBox\n      initial={{ x: '-25vw' }}\n      animate={{\n        x: 0,\n        transition: { type: 'spring', bounce: 0.5 },\n      }}\n    >\n      <SimpleGrid\n        width=\"100%\"\n        columns={7}\n        spacingX={[2, 3, 5, 5]}\n        spacingY={[2, 2, 3, 3]}\n      >\n        {weekDaysTitles}\n        {tilesOffset}\n\n        {tiles}\n      </SimpleGrid>\n    </MotionBox>\n  );\n};\n\nexport default CalendarMonth;\n","import React from 'react';\n\nimport { motion } from 'framer-motion';\nimport { Button, ButtonProps } from '@chakra-ui/react';\n\nconst MotionButton = motion(Button);\n\nexport default function MonthButton({\n  children,\n  ...props\n}: ButtonProps): JSX.Element {\n  return (\n    <MotionButton\n      colorScheme=\"gray\"\n      whileHover={{ scale: 1.1 }}\n      whileTap={{ scale: 0.6, transition: { duration: 0.1 } }}\n      {...props}\n    >\n      {children}\n    </MotionButton>\n  );\n}\n","import React from 'react';\nimport { Box, Center, Heading, HStack, Text } from '@chakra-ui/react';\nimport {\n  formatToMonthYear,\n  getFirstWeekDayInMonth,\n  getNumberDaysInMonth,\n} from '../../utils/DateTime/WeekDays';\nimport CalendarMonth, { RecordInDays } from './MonthCalendar/CalendarMonth';\nimport MonthButton from './MonthCalendar/MonthButton';\nimport MotionBox from '../../components/Motion/MotionBox';\n\nexport interface CalendarProps {\n  date: Date;\n  onNextMonth: () => void;\n  onPreviousMonth: () => void;\n  recordingDays: RecordInDays;\n}\n\nconst Calendar: React.FC<CalendarProps> = ({\n  date,\n  onNextMonth,\n  onPreviousMonth,\n  recordingDays = {},\n}) => {\n  const daysInMonth = getNumberDaysInMonth(date);\n  const firstDayInMonth = getFirstWeekDayInMonth(date);\n  const monthTitle = formatToMonthYear(date);\n\n  return (\n    <Box boxSize=\"100%\">\n      <HStack justify=\"center\" spacing={8} marginBottom={4}>\n        <MonthButton\n          aria-label=\"PreviousMonth\"\n          onClick={() => onPreviousMonth()}\n        >\n          <Text textAlign=\"center\">{'<'}</Text>\n        </MonthButton>\n\n        <Center>\n          <MotionBox\n            key={`CalendarTitle_${monthTitle}`}\n            initial={{ scaleY: 0 }}\n            animate={{ scaleY: 1 }}\n          >\n            <Heading textAlign=\"center\">{monthTitle}</Heading>\n          </MotionBox>\n        </Center>\n\n        <MonthButton aria-label=\"NextMonth\" onClick={() => onNextMonth()}>\n          <Text textAlign=\"center\">{'>'}</Text>\n        </MonthButton>\n      </HStack>\n\n      <CalendarMonth\n        key={`CalendarMonth_${monthTitle}`}\n        numberOfDays={daysInMonth}\n        startAtDay={firstDayInMonth}\n        recordsDays={recordingDays}\n      />\n    </Box>\n  );\n};\n\nexport default Calendar;\n","import { Box, Center } from '@chakra-ui/react';\nimport React from 'react';\nimport { useTypedDispatch } from '../../../app/Store';\nimport MotionBox from '../../../components/Motion/MotionBox';\nimport { AudioEntryHeader } from '../../Db/types';\nimport { loadAudioPlayback } from '../actions/CalendarActions';\n\nfunction RecordingItemDisplay({\n  audioEntry,\n}: {\n  audioEntry: AudioEntryHeader;\n}): JSX.Element {\n  const dispatch = useTypedDispatch();\n  return (\n    <Center width=\"100%\">\n      <MotionBox\n        as=\"button\"\n        width=\"100%\"\n        borderWidth=\"1px\"\n        borderRadius=\"lg\"\n        textAlign=\"center\"\n        whileHover={{ backgroundColor: '#2a4365' }}\n        whileTap={{ scale: 0.85 }}\n        initial={{ scale: 0 }}\n        animate={{\n          scale: 1,\n          transition: { duration: 0.2, ease: 'circOut' },\n        }}\n        p=\"2\"\n        onClick={() => dispatch(loadAudioPlayback(audioEntry.date))}\n      >\n        <Box\n          mt=\"1\"\n          fontWeight=\"semibold\"\n          as=\"h4\"\n          lineHeight=\"tight\"\n          isTruncated\n        >\n          {`${audioEntry.date.toLocaleTimeString()}`}\n        </Box>\n        <Box\n          color=\"gray.500\"\n          fontWeight=\"semibold\"\n          letterSpacing=\"wide\"\n          fontSize=\"xs\"\n          textTransform=\"uppercase\"\n          ml=\"2\"\n        >\n          {`${audioEntry.description} ${audioEntry.length}s`}\n        </Box>\n      </MotionBox>\n    </Center>\n  );\n}\n\nexport default RecordingItemDisplay;\n","import { Text, Center, StackDivider, VStack } from '@chakra-ui/react';\nimport React from 'react';\nimport { AudioEntryHeader } from '../../Db/types';\nimport RecordingItemDisplay from './RecordingItemDisplay';\n\ninterface DayRecordingsDisplayProps {\n  dayRecordingHeaders: Array<AudioEntryHeader>;\n}\n\nfunction DayRecordingsDisplay({\n  dayRecordingHeaders,\n}: DayRecordingsDisplayProps): JSX.Element {\n  return (\n    <VStack\n      divider={<StackDivider borderColor=\"gray.200\" />}\n      spacing={4}\n      align=\"stretch\"\n    >\n      <Center\n        mt=\"1\"\n        fontWeight=\"semibold\"\n        as=\"h2\"\n        lineHeight=\"tight\"\n        isTruncated\n      >\n        <Text fontSize=\"3xl\">{`${dayRecordingHeaders[0].date.toLocaleDateString()}`}</Text>\n      </Center>\n      {dayRecordingHeaders.map((recording) => (\n        <RecordingItemDisplay\n          key={recording.date.toString()}\n          audioEntry={recording}\n        />\n      ))}\n    </VStack>\n  );\n}\n\nexport default DayRecordingsDisplay;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { AppState } from '../../../app/Store';\nimport { isDateOnDay } from '../../../utils/DateTime/WeekDays';\n\nexport const selectRecording = (state: AppState) => state.calendar.recordings;\n\nexport const selectSelectedDay = (state: AppState) =>\n  state.calendar.selectedDay;\n\nexport const selectMonthRecordingObject = createSelector(\n  selectRecording,\n  (recordings) =>\n    recordings\n      .map((recording) => recording.date.getDate())\n      .reduce((recordingObj, day) => ({ [day]: 1, ...recordingObj }), {})\n);\n\nexport const selectDayRecordingHeaders = createSelector(\n  selectRecording,\n  selectSelectedDay,\n  (recordings, selectedDay) => {\n    if (!selectedDay) return [];\n    return recordings.filter((recording) =>\n      isDateOnDay(recording.date, selectedDay)\n    );\n  }\n);\n","import { Box, Stack } from '@chakra-ui/react';\nimport React, { useState, useEffect } from 'react';\nimport { useTypedDispatch, useTypedSelector } from '../../app/Store';\nimport { getNextMonth, getPreviousMonth } from '../../utils/DateTime/WeekDays';\nimport { loadMonthRecordigns } from './actions/CalendarActions';\nimport Calendar from './Calendar';\nimport DayRecordingsDisplay from './DayRecordingsDisplay/DayRecordingsDisplay';\nimport {\n  selectDayRecordingHeaders,\n  selectMonthRecordingObject,\n} from './store/CalendarSelectors';\n\nfunction CelendarWidget(): JSX.Element {\n  const dispatch = useTypedDispatch();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const monthRecordingObject = useTypedSelector(selectMonthRecordingObject);\n\n  const dayRecordingHeaders = useTypedSelector(selectDayRecordingHeaders);\n\n  useEffect(() => {\n    // TODO - Dispatch is slowing down calendar animation - maybe move to web worker, or load this before openning calendar\n    dispatch(loadMonthRecordigns(currentDate));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentDate]);\n\n  return (\n    <Stack\n      direction={['column', 'column', 'column', 'row']}\n      spacing={5}\n      m={[2, 2, 3, 5]}\n      justify=\"center\"\n      align=\"stretch\"\n    >\n      <Box width={['100%', '100%', '100%', '58%']}>\n        <Calendar\n          date={currentDate}\n          onNextMonth={() => setCurrentDate(getNextMonth(currentDate))}\n          onPreviousMonth={() => setCurrentDate(getPreviousMonth(currentDate))}\n          recordingDays={monthRecordingObject}\n        />\n      </Box>\n\n      {dayRecordingHeaders.length !== 0 && (\n        <Box width={['100%', '100%', '100%', '42%']}>\n          <DayRecordingsDisplay dayRecordingHeaders={dayRecordingHeaders} />\n        </Box>\n      )}\n    </Stack>\n  );\n}\n\nexport default CelendarWidget;\n","import React from 'react';\nimport { Box } from '@chakra-ui/react';\nimport CelendarWidget from '../modules/Calendar/CalendarWIdget';\n\nfunction CelendarView(): JSX.Element {\n  return (\n    <Box centerContent boxSize=\"100%\">\n      <CelendarWidget />\n    </Box>\n  );\n}\n\nexport default CelendarView;\n","import React, { useCallback, useState } from 'react';\nimport _ from 'lodash';\n\nexport interface Validation {\n  readonly [id: string]: (\n    newValue: string,\n    formState: FormState\n  ) => null | string;\n}\n\nexport interface FormState {\n  readonly [id: string]: {\n    readonly error: string | null;\n    readonly value: string;\n  };\n}\n\nfunction useForm(\n  validation: Validation\n): readonly [(e: React.FormEvent<HTMLFormElement>) => void, FormState] {\n  const [formState, changeState] = useState<FormState>(\n    _.mapValues(validation, () => ({ error: null, value: '' }))\n  );\n\n  const validateFormFields = useCallback(\n    (currentformState: FormState) => {\n      const newFormState = Object.entries(validation).reduce<FormState>(\n        (result, [id, validationFunc]) => {\n          if (validationFunc) {\n            const { value } = currentformState[id];\n            const newValidationState = validationFunc(value, currentformState);\n            return { ...result, [id]: { error: newValidationState, value } };\n          }\n          return result;\n        },\n        {}\n      );\n      changeState({ ...currentformState, ...newFormState });\n    },\n    [validation]\n  );\n\n  const onChange = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      const inputElement = e.target as HTMLInputElement;\n\n      const { id, value } = inputElement;\n      validateFormFields({ ...formState, [id]: { ...formState[id], value } });\n    },\n    [formState, validateFormFields]\n  );\n\n  return [onChange, formState] as const;\n}\n\nexport default useForm;\n","import React from 'react';\nimport {\n  Button,\n  FormControl,\n  FormErrorMessage,\n  FormHelperText,\n  FormLabel,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\n\nimport useForm, { FormState, Validation } from '../../modules/Forms/useForm';\n\nexport interface InputDeclation {\n  id: string;\n  label: string;\n  type?: string;\n  helperText?: string;\n  validation?: (newValue: string, formState: FormState) => string | null;\n}\n\ninterface BasicFormProps {\n  definition: ReadonlyArray<InputDeclation>;\n  submitText?: string;\n  onSubmit?: (state: FormState) => void;\n}\n\nfunction isNotNullAndEmpty(input: string | null): boolean {\n  if (input !== null && input !== '') return true;\n  return false;\n}\n\nfunction BasicForm({\n  definition,\n  submitText = 'Submit',\n  onSubmit = () => {},\n}: BasicFormProps): JSX.Element {\n  function getFormValidation(): Validation {\n    return definition.reduce<Validation>((validationObj, input) => {\n      const validationFunc = input.validation ?? (() => null);\n      return { ...validationObj, [input.id]: validationFunc };\n    }, {});\n  }\n\n  const [onChange, formState] = useForm(getFormValidation());\n\n  const inputs = definition.map((inputElement) => (\n    <FormControl\n      key={inputElement.id}\n      id={inputElement.id}\n      isInvalid={isNotNullAndEmpty(formState[inputElement.id].error)}\n    >\n      <FormLabel>{inputElement.label}</FormLabel>\n      <Input type={inputElement.type ?? 'text'} />\n      {inputElement.helperText && (\n        <FormHelperText>{inputElement.helperText}</FormHelperText>\n      )}\n      <FormErrorMessage>{formState[inputElement.id].error}</FormErrorMessage>\n    </FormControl>\n  ));\n\n  const submitButtonDisabled = Object.values(formState).reduce(\n    (current, field) => {\n      if (field.error === null || field.error !== '') return true;\n      return current;\n    },\n    false\n  );\n\n  return (\n    <form\n      onChange={onChange}\n      onSubmit={() => {\n        onSubmit(formState);\n      }}\n    >\n      <VStack spacing={7} align=\"stretch\">\n        {inputs}\n      </VStack>\n\n      <Button\n        width=\"100%\"\n        my={7}\n        type=\"submit\"\n        colorScheme=\"gray\"\n        disabled={submitButtonDisabled}\n      >\n        {submitText}\n      </Button>\n    </form>\n  );\n}\n\nexport default BasicForm;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { AddToCypressWindow } from '../../../utils/testing/CypressUtils';\nimport authSession from '../AuthSession';\n\nexport const createNewUser = createAsyncThunk<\n  boolean,\n  { name: string; password: string }\n>('user/createNewUser', async ({ name, password }) => {\n  const result = await authSession.createNewUser(name, password);\n  if (result) return true;\n  return false;\n});\n\nAddToCypressWindow('createNewUser', createNewUser);\n\nexport const loginUser = createAsyncThunk<boolean, string>(\n  'user/loginUser',\n  async (password) => {\n    const result = await authSession.authenticate(password);\n    return result;\n  }\n);\n\nAddToCypressWindow('loginUser', loginUser);\n","import React from 'react';\nimport { useTypedDispatch } from '../../../app/Store';\nimport BasicForm from '../../../components/Form/BasicForm';\nimport { createNewUser } from '../actions/UserActions';\n\nfunction UserCreationForm(): JSX.Element {\n  const dispatch = useTypedDispatch();\n  return (\n    <BasicForm\n      onSubmit={(state) =>\n        dispatch(\n          createNewUser({\n            name: state.name.value,\n            password: state.password.value,\n          })\n        )\n      }\n      definition={[\n        {\n          id: 'name',\n          label: 'Your Name',\n          helperText: 'What should we call you?',\n          validation: (value) => {\n            if (value.length >= 5) return '';\n            return 'Your name is too short';\n          },\n        },\n        {\n          id: 'password',\n          label: 'Password',\n          type: 'password',\n          helperText:\n            'Your data is not stored in servers. If you lose your password your data is lost forever!',\n          validation: (value) => {\n            if (value.length >= 5) return '';\n            return 'Your password is too short';\n          },\n        },\n        {\n          id: 'passwordConfirmation',\n          label: 'Confirm Password',\n          type: 'password',\n          validation: (value, otherValues) => {\n            if (value === otherValues.password.value) return '';\n            return 'Passwords are different';\n          },\n        },\n      ]}\n    />\n  );\n}\n\nexport default UserCreationForm;\n","import React from 'react';\nimport { AsyncActionStatus } from './AsyncActionHelpers';\n\nexport interface RenderAsyncActionsProps {\n  actionStatus: AsyncActionStatus;\n  statusMap: { [key in AsyncActionStatus]?: React.ReactNode };\n}\n\nfunction RenderAsyncActions({\n  actionStatus,\n  statusMap,\n}: RenderAsyncActionsProps): JSX.Element {\n  const toRender = statusMap[actionStatus];\n  return <>{toRender}</>;\n}\n\nexport default RenderAsyncActions;\n","import { Center, Spinner } from '@chakra-ui/react';\nimport React from 'react';\n\nfunction LoadingSpinner(): JSX.Element {\n  return (\n    <Center>\n      <Spinner size=\"xl\" my={5} />\n    </Center>\n  );\n}\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport { Container, Heading, SlideFade } from '@chakra-ui/react';\n\nimport { Navigate } from 'react-router-dom';\nimport UserCreationForm from '../modules/Authentication/UserCreation/UserCreationForm';\n\nimport { selectIsUserCreated } from '../modules/Authentication/state/UserSelectors';\nimport { useTypedSelector } from '../app/Store';\nimport { AsyncActionStatus } from '../utils/ReduxUtils/AsyncActionHelpers';\nimport RenderAsyncActions from '../utils/ReduxUtils/RenderAsyncActions';\nimport LoadingSpinner from '../components/Loading/LoadingSpinner';\n\nfunction CreateUserView(): JSX.Element {\n  const isUserCreated = useTypedSelector(selectIsUserCreated);\n\n  const failedErrorMessage = (\n    <SlideFade in offsetY=\"-50px\">\n      <Heading\n        py={10}\n        as=\"h6\"\n        size=\"xs\"\n        pb={5}\n        color=\"red.300\"\n        textAlign=\"center\"\n      >\n        Failed to create user :(. Please reload and try again.\n      </Heading>\n    </SlideFade>\n  );\n\n  return (\n    <Container maxW=\"container.sm\">\n      <RenderAsyncActions\n        actionStatus={isUserCreated}\n        statusMap={{\n          [AsyncActionStatus.NotStarted]: <UserCreationForm />,\n          [AsyncActionStatus.Completed]: <Navigate to=\"/\" replace />,\n          [AsyncActionStatus.Rejected]: failedErrorMessage,\n          [AsyncActionStatus.Pending]: <LoadingSpinner />,\n        }}\n      />\n    </Container>\n  );\n}\n\nexport default CreateUserView;\n","import React from 'react';\nimport { useTypedDispatch } from '../../../app/Store';\nimport BasicForm from '../../../components/Form/BasicForm';\nimport { loginUser } from '../actions/UserActions';\n\nfunction UserLoginForms(): JSX.Element {\n  const dispatch = useTypedDispatch();\n  return (\n    <BasicForm\n      onSubmit={(state) => dispatch(loginUser(state.password.value))}\n      definition={[\n        {\n          id: 'password',\n          label: 'Password',\n          type: 'password',\n          helperText:\n            'Your data is not stored in servers. If you lose your password your data is lost forever!',\n          validation: (value) => {\n            if (value.length >= 5) return '';\n            return 'Your password is too short';\n          },\n        },\n      ]}\n    />\n  );\n}\n\nexport default UserLoginForms;\n","import React from 'react';\nimport {\n  Center,\n  Container,\n  Heading,\n  Link as ChakraLink,\n  SlideFade,\n} from '@chakra-ui/react';\nimport { Link, Navigate } from 'react-router-dom';\nimport UserLoginForms from '../modules/Authentication/UserLogin/UserLoginForms';\nimport { useTypedSelector } from '../app/Store';\nimport RenderAsyncActions from '../utils/ReduxUtils/RenderAsyncActions';\nimport {\n  selectIsUserCreated,\n  selectIsUserLoggedIn,\n} from '../modules/Authentication/state/UserSelectors';\nimport { AsyncActionStatus } from '../utils/ReduxUtils/AsyncActionHelpers';\nimport LoadingSpinner from '../components/Loading/LoadingSpinner';\n\nfunction LoginView(): JSX.Element {\n  const isUsedloggedIn = useTypedSelector(selectIsUserLoggedIn);\n  const isUserCreated = useTypedSelector(selectIsUserCreated);\n\n  const withIncorrectPassword = (children: React.ReactNode) => (\n    <>\n      <SlideFade in offsetY=\"-50px\">\n        <Heading as=\"h6\" size=\"xs\" pb={5} color=\"red.300\">\n          Incorrect Password\n        </Heading>\n        {children}\n      </SlideFade>\n    </>\n  );\n\n  const userLoginForm = (\n    <RenderAsyncActions\n      actionStatus={isUsedloggedIn}\n      statusMap={{\n        [AsyncActionStatus.NotStarted]: <UserLoginForms />,\n        [AsyncActionStatus.Completed]: <Navigate to=\"/\" replace />,\n        [AsyncActionStatus.Rejected]: withIncorrectPassword(<UserLoginForms />),\n        [AsyncActionStatus.Pending]: <LoadingSpinner />,\n      }}\n    />\n  );\n\n  return (\n    <Container maxW=\"container.sm\" mt={5}>\n      {isUserCreated === AsyncActionStatus.Completed ? (\n        userLoginForm\n      ) : (\n        <Center textAlign=\"center\">\n          <Heading as=\"h2\" size=\"lg\">\n            Don&apos;t have a user?{'  '}\n            <ChakraLink as=\"h2\">\n              <Link to=\"/create\"> How about creating a new user?</Link>\n            </ChakraLink>\n          </Heading>\n        </Center>\n      )}\n    </Container>\n  );\n}\n\nexport default LoginView;\n","import React from 'react';\nimport { Icon, IconButton, useColorMode } from '@chakra-ui/react';\nimport { MdBrightness4 } from 'react-icons/md';\n\nfunction ColorModeButton(): JSX.Element {\n  const { toggleColorMode } = useColorMode();\n  return (\n    <IconButton\n      onClick={toggleColorMode}\n      colorScheme=\"gray\"\n      aria-label=\"ColorMode\"\n      icon={<Icon as={MdBrightness4} />}\n    />\n  );\n}\n\nexport default ColorModeButton;\n","import React from 'react';\nimport { Box } from '@chakra-ui/react';\nimport ColorModeButton from '../components/Header/ColorModeButton';\n\nfunction OptionsView(): JSX.Element {\n  return (\n    <Box centerContent boxSize=\"100%\">\n      <ColorModeButton />\n    </Box>\n  );\n}\n\nexport default OptionsView;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { AppState } from '../../../app/Store';\nimport { MicAvailability } from './RecordTypes';\n\nexport const selectIsRecording = (state: AppState) => state.record.isRecording;\n\nexport const selectMicrophoneAvailability = (state: AppState) =>\n  state.record.isMicrophoneAvailable;\n\nexport const selectIsMicAvailable = createSelector(\n  selectMicrophoneAvailability,\n  (micAvailability) => micAvailability === MicAvailability.Available\n);\n","import React, { useEffect, useState } from 'react';\n\nimport { Heading } from '@chakra-ui/react';\nimport { formatSecondsToCounter } from '../../utils/DateTime/WeekDays';\n\nfunction RecordingCounter(): JSX.Element {\n  const [counter, setCounter] = useState(0);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setCounter(counter + 1);\n    }, 1000);\n  }, [counter, setCounter]);\n\n  return (\n    <Heading p={1} as=\"h2\" size=\"3xl\" isTruncated>\n      {formatSecondsToCounter(counter)}\n    </Heading>\n  );\n}\n\nexport default RecordingCounter;\n","/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport { Box, Center, SlideFade, VisuallyHidden } from '@chakra-ui/react';\n\nimport { motion } from 'framer-motion';\nimport { recordButtonClicked } from './RecordActions';\nimport { useTypedDispatch, useTypedSelector } from '../../app/Store';\nimport {\n  selectIsMicAvailable,\n  selectIsRecording,\n} from './state/RecordSelectors';\nimport RecordingCounter from './RecordingCounter';\n\nfunction RecordPanel(): JSX.Element {\n  const dispatch = useTypedDispatch();\n  const isRecording = useTypedSelector(selectIsRecording);\n  const isMicAvailable = useTypedSelector(selectIsMicAvailable);\n  const redRecording = '#ff524d';\n  const recordingIcon = (\n    <button type=\"button\">\n      <VisuallyHidden>End Recording</VisuallyHidden>\n      <motion.svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"ionicon\"\n        viewBox=\"0 0 512 512\"\n        width=\"100%\"\n        role=\"presentation\"\n      >\n        <motion.path\n          d=\"M448 256c0-106-86-192-192-192S64 150 64 256s86 192 192 192 192-86 192-192z\"\n          fill=\"none\"\n          stroke={redRecording}\n          strokeMiterlimit=\"10\"\n          strokeWidth=\"32\"\n          strokeLinecap=\"round\"\n        />\n        <motion.circle\n          initial={{ opacity: 0, pathLength: 0, r: 0 }}\n          animate={{ pathLength: 1, opacity: 1, r: 144 }}\n          transition={{ ease: 'easeInOut', duration: 0.5 }}\n          fill={redRecording}\n          cx=\"256\"\n          cy=\"256\"\n          r=\"144\"\n        />\n      </motion.svg>\n    </button>\n  );\n\n  const micNotAvailableIcon = (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"100%\"\n      fill=\"none\"\n      viewBox=\"0 0 512 512\"\n      stroke=\"currentColor\"\n    >\n      <title>microphone not authorized or available</title>\n      <motion.path\n        initial={{ opacity: 0, pathLength: 0 }}\n        animate={{ pathLength: 1, opacity: 1 }}\n        transition={{ ease: 'easeInOut', duration: 1.5 }}\n        strokeLinecap=\"round\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"32\"\n        stroke={redRecording}\n        d=\"M432 400L96 64\"\n      />\n      <motion.path\n        initial={{ opacity: 0, pathLength: 0 }}\n        animate={{ pathLength: 1, opacity: 1 }}\n        transition={{ ease: 'easeInOut', duration: 1.5 }}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"2\"\n        fill=\"currentColor\"\n        stroke={redRecording}\n        d=\"M400 240v-31.55c0-8.61-6.62-16-15.23-16.43A16 16 0 00368 208v32a111.58 111.58 0 01-2.45 23.31 4.05 4.05 0 001.07 3.69l21.82 21.81a2 2 0 003.29-.72A143.27 143.27 0 00400 240zM256 352a112.36 112.36 0 01-112-112v-31.55c0-8.61-6.62-16-15.23-16.43A16 16 0 00112 208v32c0 74 56.1 135.12 128 143.11V432h-47.55c-8.61 0-16 6.62-16.43 15.23A16 16 0 00192 464h127.55c8.61 0 16-6.62 16.43-15.23A16 16 0 00320 432h-48v-48.89a143.08 143.08 0 0052-16.22 4 4 0 00.91-6.35L307 342.63a4 4 0 00-4.51-.78A110.78 110.78 0 01256 352zM256 80a47.18 47.18 0 0148 48v74.72a4 4 0 001.17 2.82L332.59 233a2 2 0 003.41-1.42V128.91C336 85 301 48.6 257.14 48a79.66 79.66 0 00-68.47 36.57 4 4 0 00.54 5l19.54 19.54a2 2 0 003.25-.63A47.44 47.44 0 01256 80z\"\n      />\n      <motion.path\n        initial={{ opacity: 0, pathLength: 0 }}\n        animate={{ pathLength: 1, opacity: 1 }}\n        transition={{ ease: 'easeInOut', duration: 1.5 }}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"2\"\n        fill=\"currentColor\"\n        stroke={redRecording}\n        d=\"M207.27 242.9L179.41 215a2 2 0 00-3.41 1.42V239a80.89 80.89 0 0023.45 56.9 78.55 78.55 0 0077.8 21.19 2 2 0 00.86-3.35l-24.91-24.91a4.08 4.08 0 00-2.42-1.15c-21.65-2.52-39.48-20.44-42.37-42.43a4 4 0 00-1.14-2.35z\"\n      />\n    </motion.svg>\n  );\n\n  const micAvailableIcon = (\n    <button type=\"button\">\n      <VisuallyHidden>Start Recording</VisuallyHidden>\n      <motion.svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 512 512\"\n        stroke=\"currentColor\"\n        width=\"100%\"\n        role=\"presentation\"\n      >\n        <motion.path\n          initial={{ opacity: 0, pathLength: 0 }}\n          animate={{ pathLength: 1, opacity: 1 }}\n          transition={{ ease: 'easeInOut', duration: 1.5 }}\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"32\"\n          d=\"M192 448h128M384 208v32c0 70.4-57.6 128-128 128h0c-70.4 0-128-57.6-128-128v-32M256 368v80\"\n        />\n        <motion.path\n          initial={{ opacity: 0, pathLength: 0 }}\n          animate={{ pathLength: 1, opacity: 1 }}\n          transition={{ ease: 'easeInOut', duration: 1.5 }}\n          d=\"M256 64a63.68 63.68 0 00-64 64v111c0 35.2 29 65 64 65s64-29 64-65V128c0-36-28-64-64-64z\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"32\"\n        />\n      </motion.svg>\n    </button>\n  );\n\n  const icons = (\n    <>\n      {isRecording\n        ? recordingIcon\n        : isMicAvailable\n        ? micAvailableIcon\n        : micNotAvailableIcon}\n    </>\n  );\n\n  return (\n    <>\n      <Center m={10} width={['80%', '80%', '70%', '50%', '30%']}>\n        <Box onClick={() => dispatch(recordButtonClicked())}>{icons}</Box>\n      </Center>\n\n      <Center>\n        <SlideFade in={isRecording} offsetY=\"20px\">\n          {isRecording && <RecordingCounter />}\n        </SlideFade>\n      </Center>\n    </>\n  );\n}\n\nexport default RecordPanel;\n","import React, { useEffect } from 'react';\nimport { Container, Flex, Spacer } from '@chakra-ui/react';\n\nimport RecordPanel from '../modules/Recording/RecordPanel';\nimport { useTypedDispatch } from '../app/Store';\nimport { askForMicrophonePermission } from '../modules/Recording/RecordActions';\n\nfunction RecordView(): JSX.Element {\n  const dispatch = useTypedDispatch();\n\n  useEffect(() => {\n    dispatch(askForMicrophonePermission());\n  }, [dispatch]);\n\n  return (\n    <Container overflow=\"hidden\" maxW=\"container.xl\" centerContent>\n      <RecordPanel />\n    </Container>\n  );\n}\n\nexport default RecordView;\n","import {\n  changedAudioTime,\n  loadAudioDuration,\n  stopPlayingRecord,\n} from '../../modules/Playback/actions/PlaybackActions';\nimport audio from '../../modules/Playback/AudioController/AudioController';\n\ntype ActionFunction = (dispatch: (v: unknown) => Promise<void>) => void;\n\nconst OnPageLoadActions: Array<ActionFunction> = [\n  (dispatch): void => {\n    audio.onAudioDurantionChange(() => {\n      dispatch(loadAudioDuration());\n    });\n  },\n  (dispatch): void => {\n    audio.onCurrentTimeUpdate((currentTime) => {\n      dispatch(changedAudioTime(currentTime));\n    });\n  },\n  (dispatch): void => {\n    audio.onAudioPlaybackEnd(() => {\n      dispatch(stopPlayingRecord());\n    });\n  },\n];\n\nexport default OnPageLoadActions;\n","import { useEffect } from 'react';\nimport { useTypedDispatch } from '../Store';\nimport { loadInitialUserState } from './LoadInitialStateActions';\nimport OnPageLoadActions from './OnPageLoadActions';\n\nfunction LoadInitialState(): void {\n  const dispatch = useTypedDispatch();\n\n  useEffect(() => {\n    dispatch(loadInitialUserState());\n\n    OnPageLoadActions.forEach((func) => func(dispatch));\n  }, [dispatch]);\n}\n\nexport default LoadInitialState;\n","import { Skeleton, Stack } from '@chakra-ui/react';\nimport React from 'react';\n\nfunction PageSkeleton(): JSX.Element {\n  return (\n    <Stack spacing={5}>\n      <Skeleton height=\"50px\" />\n      <Skeleton height=\"50px\" />\n      <Skeleton height=\"50px\" />\n    </Stack>\n  );\n}\n\nexport default PageSkeleton;\n","import { Container } from '@chakra-ui/react';\nimport React from 'react';\nimport PageSkeleton from '../../components/Loading/PageSkeleton';\nimport { selectIsLoadingInitialState } from '../../modules/Authentication/state/UserSelectors';\nimport { useTypedSelector } from '../Store';\n\nexport default function WithInitialPageSkeleton({\n  children,\n}: {\n  children: React.ReactNode;\n}): JSX.Element {\n  const appIsLoading = useTypedSelector(selectIsLoadingInitialState);\n\n  return (\n    <>\n      {appIsLoading ? (\n        <Container maxW=\"container.sm\" mt={5}>\n          <PageSkeleton />\n        </Container>\n      ) : (\n        children\n      )}\n    </>\n  );\n}\n","import { Box, Flex, Spacer } from '@chakra-ui/react';\nimport React from 'react';\n\nimport { Routes, Route } from 'react-router-dom';\nimport AppHeader from '../components/Header/AppHeader';\nimport { OnlyLoggedIn } from '../modules/Authentication/OnlyLoggedIn';\nimport PlaybackPanel from '../modules/Playback/PlaybackPanel';\nimport CalendarView from '../views/CalendarView';\nimport CreateUserView from '../views/CreateUserView';\nimport LoginView from '../views/LoginView';\nimport OptionsView from '../views/OptionsView';\nimport RecordView from '../views/RecordView';\nimport LoadInitialState from './LoadInitialState/LoadInitialStateHook';\nimport WithInitialPageSkeleton from './LoadInitialState/WithInitialPageSkeleton';\n\nfunction App(): JSX.Element {\n  LoadInitialState();\n\n  const navBarHeight = ['10%', '10%', '7%'];\n\n  const contentHeight = navBarHeight\n    .map((value) => 100 - Number(value.replace('%', '')))\n    .map((value) => `${String(value)}%`);\n\n  const WithPlaybackLayout = ({ children }: { children: React.ReactNode }) => (\n    <Flex height={contentHeight} direction=\"column\">\n      <Box overflow=\"auto\">{children}</Box>\n      <Spacer />\n      <Box>\n        <PlaybackPanel />\n      </Box>\n    </Flex>\n  );\n\n  const recordView = (\n    <WithInitialPageSkeleton>\n      <OnlyLoggedIn>\n        <WithPlaybackLayout>\n          <RecordView />\n        </WithPlaybackLayout>\n      </OnlyLoggedIn>\n    </WithInitialPageSkeleton>\n  );\n\n  const otionsView = (\n    <WithInitialPageSkeleton>\n      <OnlyLoggedIn>\n        <WithPlaybackLayout>\n          <OptionsView />\n        </WithPlaybackLayout>\n      </OnlyLoggedIn>\n    </WithInitialPageSkeleton>\n  );\n\n  const calendarView = (\n    <WithPlaybackLayout>\n      <CalendarView />\n    </WithPlaybackLayout>\n  );\n\n  const loginView = (\n    <WithInitialPageSkeleton>\n      <Box height={contentHeight}>\n        <LoginView />\n      </Box>\n    </WithInitialPageSkeleton>\n  );\n\n  const createUserView = (\n    <WithInitialPageSkeleton>\n      <Box height={contentHeight}>\n        <CreateUserView />\n      </Box>\n    </WithInitialPageSkeleton>\n  );\n\n  return (\n    <Box\n      height={`${String(window.innerHeight)}px`}\n      width={`${String(window.innerWidth)}px`}\n    >\n      <Box as=\"nav\" height={navBarHeight}>\n        <OnlyLoggedIn redirect={false}>\n          <AppHeader />\n        </OnlyLoggedIn>\n      </Box>\n\n      <Routes>\n        <Route path=\"/*\" element={recordView} />\n        <Route path=\"calendar\" element={calendarView} />\n        <Route path=\"login\" element={loginView} />\n        <Route path=\"create\" element={createUserView} />\n        <Route path=\"options\" element={otionsView} />\n      </Routes>\n    </Box>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-param-reassign */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ThemeConfig } from '@chakra-ui/react';\n\nconst themeConfig: ThemeConfig = {\n  initialColorMode: 'dark',\n  useSystemColorMode: false,\n};\n\nexport default themeConfig;\n","import { extendTheme } from '@chakra-ui/react';\nimport themeConfig from './config';\n\nconst AppTheme = extendTheme({\n  config: themeConfig,\n  styles: {\n    global: {\n      '*': {\n        '-webkit-tap-highlight-color': 'transparent !important',\n      },\n    },\n  },\n});\n\nexport default AppTheme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ColorModeScript } from '@chakra-ui/react';\nimport App from './app/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport AppTheme from './theme/theme';\nimport WrapWithProviders from './app/Providers';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript initialColorMode={AppTheme.config.initialColorMode} />\n    {WrapWithProviders(<App />)}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { ChakraProvider } from '@chakra-ui/react';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport AppTheme from '../theme/theme';\nimport mainStore from './Store';\n\nexport default function WrapWithProviders(\n  children: JSX.Element,\n  store = mainStore\n): JSX.Element {\n  return (\n    <Provider store={store}>\n      <Router>\n        <ChakraProvider theme={AppTheme}>{children}</ChakraProvider>\n      </Router>\n    </Provider>\n  );\n}\n"],"sourceRoot":""}